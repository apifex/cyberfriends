{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ScrollBox.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","width","height","src","CardList","friends","map","_user","i","key","SearchBox","searchListener","type","placeholder","onChange","ScrollBox","props","style","overflowY","border","children","App","onsearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredfriends","filter","friend","toLowerCase","includes","toLocaleLowerCase","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAYeA,EAVF,YAA6B,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAOC,EAAK,EAALA,GAChC,OACI,yBAAKC,UAAU,sDACX,yBAAKC,IAAI,OAAOC,MAAM,MAAMC,OAAO,MAAMC,IAAG,+BAA0BL,KACtE,4BAAKF,GACL,2BAAIC,KCWDO,EAfE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChB,OACI,6BACKA,EAAQC,KAAI,SAACC,EAAOC,GACjB,OAAO,kBAAC,EAAD,CACHC,IAAMJ,EAAQG,GAAGV,GACjBF,KAAMS,EAAQG,GAAGZ,KACjBC,MAAOQ,EAAQG,GAAGX,MAClBC,GAAIO,EAAQG,GAAGV,UCOpBY,EAhBG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACjB,OACI,yBAAKZ,UAAU,OACX,2BACIA,UAAU,yCACVa,KAAK,SACLC,YAAY,iBACZC,SAAaH,MCCdI,EARG,SAACC,GACf,OACI,yBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBjB,OAAO,UAC/Dc,EAAMI,WCuCJC,G,wDAnCb,aAAe,IAAD,8BACZ,gBAYFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAZzC,EAAKC,MAAQ,CACXvB,QAAS,GACToB,YAAa,IAJH,E,gEAOO,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACnB,QAAS4B,S,+BAO/B,IAAD,EACwBC,KAAKN,MAA7BvB,EADA,EACAA,QAASoB,EADT,EACSA,YACVU,EAAkB9B,EAAQ+B,QAAO,SAAAC,GACrC,OAAOA,EAAOzC,KAAK0C,cAAcC,SAASd,EAAYe,wBAExD,OACE,6BACE,wBAAIzC,UAAW,MAAf,iBACA,kBAAC,EAAD,CAAWY,eAAmBuB,KAAKZ,iBACnC,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUjB,QAAU8B,U,GA5BdM,c,MCElBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACA,yBAAK7C,UAAU,MACb,kBAAC,EAAD,QAGF8C,SAASC,eAAe,U","file":"static/js/main.f8b46457.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = function({name, email, id}) {\r\n    return (\r\n        <div className='tc bg-light-blue pa3 ma2 grow dib br3 bw3 shadow-5'>\r\n            <img alt='text' width='220' height='220' src={`https://flathash.com/${id}`}/>\r\n            <h3>{name}</h3>\r\n            <p>{email}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ friends }) => {\r\n    return (\r\n        <div>\r\n            {friends.map((_user, i) => {\r\n                return <Card \r\n                    key= {friends[i].id} \r\n                    name={friends[i].name} \r\n                    email={friends[i].email} \r\n                    id={friends[i].id}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchListener }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='bg-light-blue b--light-blue pa3 ba br2'\r\n                type='search' \r\n                placeholder='search friends'\r\n                onChange = { searchListener }\r\n                />\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst ScrollBox = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScrollBox;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport ScrollBox from '../components/ScrollBox';\nimport './App.css';\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      friends: [],\n      searchfield: '',\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({friends: users }))\n  }\n\n  onsearchChange = (event) =>{\n    this.setState({searchfield: event.target.value})\n  }\n\n  render() {\n    const {friends, searchfield} = this.state;\n    const filteredfriends = friends.filter(friend =>{\n      return friend.name.toLowerCase().includes(searchfield.toLocaleLowerCase())\n    })\n    return (\n      <div>\n        <h1 className= 'f1'>Cyber Friends</h1>\n        <SearchBox searchListener = { this.onsearchChange }/>\n        <ScrollBox>\n            <CardList friends={ filteredfriends } />\n        </ScrollBox>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\n\nimport 'tachyons';\n\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n  <div className='tc'>\n    <App />\n  </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}